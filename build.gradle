plugins {
    id 'java'
    id 'io.qameta.allure' version '2.12.0' // Correct version of Allure plugin
}
apply plugin: 'java'
apply plugin: 'io.qameta.allure'

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    gradlePluginPortal() // Ensure this is included for fetching plugins
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'io.cucumber:cucumber-java:7.14.0'
    testImplementation 'io.cucumber:cucumber-junit:7.14.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.9.2'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.27.0'
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'
    implementation 'org.springframework:spring-context:5.3.25'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.24.3'

    // Allure dependencies
    testImplementation 'io.qameta.allure:allure-java-commons:2.12.0' // Ensure version consistency
    testImplementation 'io.qameta.allure:allure-cucumber5:2.12.0'  // If using Cucumber
    testImplementation 'io.qameta.allure:allure-cucumber6-jvm:2.12.0' // If using Cucumber 6

}

test {
    useJUnitPlatform()
}

// Tasks to generate Allure Report
task allureReport(type: io.qameta.allure.gradle.task.AllureReport) {
    dependsOn test
}

task allureServe(type: io.qameta.allure.gradle.task.AllureServe) {
    dependsOn allureReport
}

// Allure configuration block
allure {
    version = '2.12.0' // Ensure this matches the plugin version
    autoconfigure = true
    aspectj = true
}
